# https://taskfile.dev
version: '3'

silent: true

vars:
  GO_MODULE: github.com/evgeniy-krivenko/chat-service
  GO_FILES:
    sh: find . -type f -name '*.go' -not -path "./vendor/*" -not -path "*.gen.go" | tr "\n" " "

  GOLANGCI_LINT_VERSION: v1.52.2
  GOLANGCI_LINT_CACHE:
    sh: echo "$HOME/Library/Caches/golangci-lint"

  DEV_TOOLS: |
    github.com/daixiang0/gci@v0.8.0
    mvdan.cc/gofumpt@v0.4.0
    github.com/kazhuravlev/options-gen/cmd/options-gen@v0.28.4

  WORKDIR:
    sh: echo "$(pwd)"

  DEV_TOOLS_PATH: /tools/bin

tasks:
  default:
    # Последовательно выполняем таски tidy, fmt, lint, tests и build
    cmds:
      - task: tidy
      - task: fmt
      - task: lint
      - task: tests
      - task: build

  gen:
    cmds:
      - echo "- Generate files"
      - export PATH=$PATH:{{.WORKDIR}}{{.DEV_TOOLS_PATH}} && go generate ./...

  tidy:
    - echo "- Tidy"
    - go mod tidy
    - task: vendor

  vendor:
    - echo "- Vendor"
    - go mod vendor

  fmt:
    - echo "- Format"
    - .{{.DEV_TOOLS_PATH}}/gofumpt -w  {{.GO_FILES}}
    - .{{.DEV_TOOLS_PATH}}/gci write -s standard -s default -s "prefix({{.GO_MODULE}})" {{.GO_FILES}}

  lint:
    cmds:
      - echo "- Lint"
      - mkdir -p {{.GOLANGCI_LINT_CACHE}}
      - task: lint:cmd
        vars: {CLI_ARGS: "run -v --fix --timeout=5m ./..."}

  lint:cmd:
    cmds:
      - |
        docker run --rm \
          -v "$(pwd):/app" -w /app \
          -v "{{.GOLANGCI_LINT_CACHE}}:/root/.cache" \
          golangci/golangci-lint:{{.GOLANGCI_LINT_VERSION}} \
          golangci-lint {{.CLI_ARGS}}

  tests:
    cmds:
      - echo "- Tests"
      - go test -race ./...

  build:
    cmds:
      - echo "- Build"
      - go build ./cmd/chat-service

  dev-tools:install:
    cmds:
      - echo "- Install dev tools"
      - mkdir -p .{{.DEV_TOOLS_PATH}}
      - |
        {{range $tool := .DEV_TOOLS | trim | splitLines -}}
          GOBIN={{$.WORKDIR}}{{$.DEV_TOOLS_PATH}} go install {{$tool}}
        {{end -}}
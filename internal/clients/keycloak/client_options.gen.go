// Code generated by options-gen. DO NOT EDIT.
package keycloakclient

import (
	fmt461e464ebed9 "fmt"

	errors461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/errors"
	validator461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/validator"
)

type OptOptionsSetter func(o *Options)

func NewOptions(
	basePath string,
	keycloakRealm string,
	keycloakClientID string,
	keycloakClientSecret string,
	options ...OptOptionsSetter,
) Options {
	o := Options{}

	// Setting defaults from field tag (if present)

	o.basePath = basePath
	o.keycloakRealm = keycloakRealm
	o.keycloakClientID = keycloakClientID
	o.keycloakClientSecret = keycloakClientSecret

	for _, opt := range options {
		opt(&o)
	}
	return o
}

func WithDebugMode(opt bool) OptOptionsSetter {
	return func(o *Options) {
		o.debugMode = opt
	}
}

func WithUserAgent(opt string) OptOptionsSetter {
	return func(o *Options) {
		o.userAgent = opt
	}
}

func WithProductionMode(opt bool) OptOptionsSetter {
	return func(o *Options) {
		o.productionMode = opt
	}
}

func (o *Options) Validate() error {
	errs := new(errors461e464ebed9.ValidationErrors)
	errs.Add(errors461e464ebed9.NewValidationError("basePath", _validate_Options_basePath(o)))
	errs.Add(errors461e464ebed9.NewValidationError("keycloakRealm", _validate_Options_keycloakRealm(o)))
	errs.Add(errors461e464ebed9.NewValidationError("keycloakClientID", _validate_Options_keycloakClientID(o)))
	errs.Add(errors461e464ebed9.NewValidationError("keycloakClientSecret", _validate_Options_keycloakClientSecret(o)))
	return errs.AsError()
}

func _validate_Options_basePath(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.basePath, "required,url"); err != nil {
		return fmt461e464ebed9.Errorf("field `basePath` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_keycloakRealm(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.keycloakRealm, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `keycloakRealm` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_keycloakClientID(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.keycloakClientID, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `keycloakClientID` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_keycloakClientSecret(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.keycloakClientSecret, "required,alphanum"); err != nil {
		return fmt461e464ebed9.Errorf("field `keycloakClientSecret` did not pass the test: %w", err)
	}
	return nil
}
